/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

buildscript {
    //    所有项目共享的属性列表
    ext["springBootVersion"] = "3.0.2"
    ext["lombok.version"] = "1.18.12"
    ext["springCloudVersion"] = "2022.0.0"
    ext["dubboVersion"] = "3.2.9"
    ext["springCloudAlibaba"] = "2022.0.0.0"

//配置gradle 插件的依赖
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
//配置gradle插件仓库
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/plugins-release" }
        maven { url "https://maven.aliyun.com/repository/public" }
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
}

apply plugin: 'io.spring.dependency-management'

// 这里算用于本项目构建脚本的开始
// 所有项目公用的构建脚本
allprojects {
    group = "com.example"
    version = "0.0.1-SNAPSHOT"

    apply {
        plugin 'java'
        plugin 'idea'
        plugin 'io.spring.dependency-management'
        plugin 'maven-publish'
    }

    sourceCompatibility = 17
    targetCompatibility = 17

    // 配置所有项目依赖的仓库地址。
    // 这里放弃mavenLocal()，因为本地仓库地址不适合每个人。没啥用
    repositories {
        maven { url "https://maven.aliyun.com/repository/public" }
        mavenCentral()
    }

    dependencyManagement {
        dependencies {
            imports {
                mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            }

            // 这个插件还可以在这里对一些jar包版本进行声明： 这样后续在使用的时候就可以不用添加版本
            // 对于一些公用版本，这里可以进行统一的控制
            dependency 'org.apache.commons:commons-lang3:3.12.0'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    test {
        ignoreFailures = true
    }
}

